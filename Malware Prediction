# install.packages("data.table")
library(data.table)
train <- fread(file = "C:/Users/ronni/Desktop/kaggle竞赛/train.csv",header=TRUE)
col <- colSums(is.na(train))
col
sub <- which(is.na(train[,7]))
train[sub,7]=median(train$RtpStateBitfield,na.rm =T)
summary(train$RtpStateBitfield)
hist(train$DefaultBrowsersIdentifier)
summary(train$DefaultBrowsersIdentifier)
train$DefaultBrowsersIdentifier <- NULL

temp <- train[,9:10]
fun <- function(x){
  if (is.na(x)) return(4)
  else if (x==53447) return(1)
  else if (x<53447 & x>40000) return(2)
  else if (x==7945) return(3)
  else return(4)
}
temp1 <- apply(temp[,1],1,fun)
temp1 <- data.frame(temp1)
temp[,1] <- temp1

sub2 <- which(is.na(temp[,2]))
for(i in sub2){
  if(temp[i,1]==1) temp[i,2]=1
    else temp[i,2]=2
}
summary(temp$AVProductsInstalled)
hist(temp$AVProductsInstalled)

sub3 <- which(is.na(train[,11]))
train[sub3,11] <- median(train$AVProductsEnabled,na.rm = T)
summary(train$AVProductsEnabled)
hist(train$AVProductsEnabled)

write.csv(train, file = "new_train.csv")


library(magrittr) # need to run every time you start R and want to use %>%
library(dplyr)
library(plyr)
new_train$Wdft_RegionIdentifier=as.factor(new_train$Wdft_RegionIdentifier)
new_train$Wdft_IsGamer=as.factor(new_train$Wdft_IsGamer)
new_train$Census_IsAlwaysOnAlwaysConnectedCapable=as.factor(new_train$Census_IsAlwaysOnAlwaysConnectedCapable)
new_train$Census_IsVirtualDevice=as.factor(new_train$Census_IsVirtualDevice)
new_train[which(new_train$Census_IsWIMBootEnabled==1),]$Census_IsWIMBootEnabled=2
new_train$Census_ThresholdOptIn=as.factor(new_train$Census_ThresholdOptIn)
new_train$Census_FlightRing=mapvalues(new_train$Census_FlightRing,c("Canary","RP","Unknown","WIF","WIS"),rep("Onemore",5))
new_train$Census_FlightRing=mapvalues(new_train$Census_FlightRing,c("Disabled","Invalid","NOT_SET"),rep("NotOnemore",3))
new_train$Census_IsFlightsDisabled=as.factor(new_train$Census_IsFlightsDisabled)
new_train$Census_GenuineStateName=mapvalues(new_train$Census_GenuineStateName,c("INVALID_LICENSE","IS_GENUINE","TAMPERED"),rep("Zeromore",3))
new_train$Census_OSWUAutoUpdateOptionsName=mapvalues(new_train$Census_OSWUAutoUpdateOptionsName,c("AutoInstallAndRebootAtMaintenanceTime","DownloadNotify","Notify"),rep("Zeromore",3))


# install.packages("e1071")
library(e1071)
x <- subset(train,select = -HasDetections)
y <- train[,"HasDetections"]
model <- svm(x,y,kernel = "radial",gamma = 1)
pred <- predict(model,x)
# install.packages("pROC")
library(pROC)
modelroc <- roc(y,pred)
auc(modelroc)
